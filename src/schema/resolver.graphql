type Pin {
    title: String!
    link: String!
    image: String!
    id: String!
    user_id: String!
}
input PinInput {
    title: String!
    link: String!
    image: String!
}
interface Person {
    id: String!
    email: String!
    pins: [Pin]
}
type User implements Person {
    id: String!
    email: String!
    pins: [Pin]
}
type Admin implements Person {
    id: String!
    email: String!
    pins: [Pin]
}
union SearchResult = User | Admin | Pin
type Query {
    pins: [Pin]
    pinById(id: String!): Pin
    users: [User]
    me: User
    search(text: String): [SearchResult]
}
type Mutation {
    addPin(pin: PinInput!): Pin
    sendShortLivedToken(email: String!): Boolean
    createLongLivedToken(token: String!): String
}
